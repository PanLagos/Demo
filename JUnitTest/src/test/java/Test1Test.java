// Generated by Selenium IDE
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.AfterAll;
import static org.junit.jupiter.api.Assertions.*;
//import static org.hamcrest.CoreMatchers.is;
//import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.*;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.concurrent.TimeUnit;

public class Test1Test {
    private static WebDriver driver;
    private static Map<String, Object> vars;
    static JavascriptExecutor js;
    private static StringBuffer verificationErrors = new StringBuffer();

    @BeforeAll
    public static void setUp() {
        System.setProperty("webdriver.chrome.driver", "src/test/java/drivers/chromedriver");
        driver = new ChromeDriver();

        //System.setProperty("webdriver.gecko.driver", "src/test/java/drivers/geckodriver2");
        //driver = new FirefoxDriver();

        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        //driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

    }
    @AfterAll
    public static void tearDown() {
        driver.quit();
        String verificationErrorString = verificationErrors.toString();
        if (!"".equals(verificationErrorString)) {
            fail(verificationErrorString);
        }

    }
    @Test
    public void test1() {
        // Test name: Test1
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("https://www.cornershop.com/");
        // 2 | setWindowSize | 1628x1025 |
        driver.manage().window().setSize(new Dimension(1628, 1025));
        // 3 | click | css=li:nth-child(1) > a |
        driver.findElement(By.cssSelector("li:nth-child(1) > a")).click();
        // 4 | click | css=li:nth-child(2) > a |
        driver.findElement(By.cssSelector("li:nth-child(2) > a")).click();
        // 5 | click | css=.col-md-4:nth-child(10) > .post-title a |
        driver.findElement(By.cssSelector(".col-md-4:nth-child(10) > .post-title a")).click();
        // 6 | click | id=mce-EMAIL |
        driver.findElement(By.id("mce-EMAIL")).click();
        // 7 | type | id=mce-EMAIL | jaime.jaime@jaime.com
        driver.findElement(By.id("mce-EMAIL")).sendKeys("jaime.jaime@jaime.com");
        // 8 | click | id=mc-embedded-subscribe |
        driver.findElement(By.id("mc-embedded-subscribe")).click();
        // 9 | click | linkText=‘Cornershop & the Double O Groove of’ Full Album Stream |
        driver.findElement(By.linkText("‘Cornershop & the Double O Groove of’ Full Album Stream")).click();
        // 10 | click | css=li:nth-child(1) > a |
        driver.findElement(By.cssSelector("li:nth-child(1) > a")).click();
        try{
            assertEquals("Welcome to Cornershop’s Official Website", driver.findElement(By.xpath("/html/body/section/div[2]/div/div[2]/aside/section[1]/h2")).getText());
            //assertNotEquals("Welcome to Cornershop’s Official Website", driver.findElement(By.xpath("/html/body/section/div[2]/div/div[2]/aside/section[1]/h2")).getText());
        }catch(Error e){
            verificationErrors.append(e.toString());
        }


    }
}
